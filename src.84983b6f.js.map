{"version":3,"sources":["src/webRawHID.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.84983b6f.js","sourceRoot":"..","sourcesContent":["import { WebUsbComInterface } from \"./webUsbComInterface\";\n\nclass WebRawHID implements WebUsbComInterface {\n  private receiveCallback: ((msg: Uint8Array) => void) | null = null;\n  private closeCallback: (() => void) | null = null;\n  private errorCallback: ((e: Error) => void) | null = null;\n\n  private port: any | null = null;\n\n  private _connected: boolean = false;\n  get connected() {\n    return this._connected;\n  }\n\n  constructor(\n    private send_chunk: number = 64,\n    private send_interval: number = 30\n  ) {}\n\n  setReceiveCallback(recvHandler: ((msg: Uint8Array) => void) | null) {\n    this.receiveCallback = (e: any) => {\n      recvHandler(new Uint8Array((e.data as DataView).buffer));\n    };\n    this.port.addEventListener(\"inputreport\", this.receiveCallback);\n    console.log(this.port);\n  }\n  setErrorCallback(handler: (e: Error) => void | null) {\n    this.errorCallback = handler;\n  }\n  setCloseCallback(handler: () => void | null) {\n    this.closeCallback = handler;\n  }\n\n  async open(onConnect: () => void | null, param: { filter: object }) {\n    const request = await navigator.hid.requestDevice({\n      filters: param.filter,\n    });\n    console.log(request);\n    this.port = request[0];\n\n    try {\n      await this.port.open();\n    } catch (e) {\n      await this.port.close();\n      return Promise.reject(e);\n    }\n\n    this._connected = true;\n\n    if (onConnect) {\n      onConnect();\n    }\n\n    // this.readLoop();\n\n    console.log(\"open Raw HID port\");\n  }\n\n  async writeString(msg: string) {\n    this.port.sendReport(0, msg);\n  }\n\n  async write(msg: Uint8Array) {\n    console.log(\n      `send: ${Array.from(msg)\n        .map((v) => v.toString(16))\n        .join(\" \")}`\n    );\n    this.port.sendReport(0, msg);\n  }\n\n  async close() {\n    if (this.closeCallback) {\n      this.closeCallback();\n    }\n\n    if (this.port) {\n      try {\n        this.port.removeEventListener(\"inputreport\", this.receiveCallback);\n        await this.port.close();\n        this.port = null;\n        this._connected = false;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    console.log(\"Raw HID port closed\");\n  }\n}\n\nexport { WebRawHID };\n","import { WebRawHID } from \"./webRawHID\";\n\nlet hid = new WebRawHID();\n\nif (!navigator.hid) {\n  alert(\"Please use chrome or edge\");\n}\n\nconst recvHandler = (msg: Uint8Array) => {\n  console.log(\n    `recv: ${Array.from(msg)\n      .map((v: number) => v.toString(16))\n      .join(\" \")}`\n  );\n\n  if (msg[0] == 2 && msg[1] == 0xec) {\n    lowText.valueAsNumber = (msg[2] << 8) + msg[3];\n    highText.valueAsNumber = (msg[4] << 8) + msg[5];\n  }\n};\n\nconst lowText = document.getElementById(\"low\") as HTMLInputElement;\nconst highText = document.getElementById(\"high\") as HTMLInputElement;\n\nconst hidOpen = async () => {\n  await hid.open(() => {}, {\n    filter: [{ usagePage: 0xff60, usage: 0x61 }],\n  });\n\n  hid.setReceiveCallback(recvHandler);\n};\n\ndocument.getElementById(\"read\").addEventListener(\n  \"click\",\n  async () => {\n    if (hid.connected == false) {\n      await hidOpen();\n    }\n\n    hid.write(Uint8Array.from([0x02, 0xec]));\n  },\n  false\n);\n\ndocument.getElementById(\"write\").addEventListener(\n  \"click\",\n  async () => {\n    if (hid.connected == false) {\n      await hidOpen();\n    }\n\n    const low = lowText.valueAsNumber;\n    const high = highText.valueAsNumber;\n\n    if (low >= high) {\n      alert(\"High threshold should be larger than low\");\n      return;\n    }\n\n    hid.write(\n      Uint8Array.from([\n        0x03,\n        0xec,\n        low >> 8,\n        low & 0xff,\n        high >> 8,\n        high & 0xff,\n      ])\n    );\n  },\n  false\n);\n\ndocument.getElementById(\"reset\").addEventListener(\n  \"click\",\n  async () => {\n    if (hid.connected == false) {\n      await hidOpen();\n    }\n\n    hid.write(Uint8Array.from([0x03, 0xec, 0xff, 0xff, 0xff, 0xff]));\n    hid.write(Uint8Array.from([0x02, 0xec]));\n  },\n  false\n);\n"]}